 /*
 * The Scoardfield is the scoreboard of darts game.
 * You put your shoot score in each field, select the ratio button 
 * if you hit a double or trible point and push the button. This 
 * immediately store your score in your textfield and prepares for next 
 * player. In the bottom there is a label which inform you every time.
 */

/*
 * ScoardField.java
 *
 * Created on Jan 28, 2012, 5:51:32 PM
 * 
 */
package ScoardUI;

import ScoardException.InvalidHit;
import ScoardGame.DartGame;
import ScoardGame.Game;
import ScoardGame.Rules01;
import ScoardGame.ScoardTeam;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author j0ni
 * @version 1.3
 * 
 */
public class ScoardField extends javax.swing.JFrame {

    public static int getValue() {
        return totalscore;
    }

    public int getScore(){
        return totalscore;
    }
    
    public int returnLbl1() throws NumberFormatException{
        int sc = Integer.parseInt(teamscore1.getText());
        return sc;
    }
    
    public int returnLbl2() throws NumberFormatException{
        int sc = Integer.parseInt(teamscore2.getText());
        return sc;
    }
    
    public void setScore(int sc){
        totalscore=sc;
    }
    
    private void setTeamScore(int sc){
        thegame.setStorePoint(sc);
    }
    
    /** Creates new form ScoardField */
    public ScoardField() {
        initComponents();
        setVisible(true);
        isTurn1.doClick();
        fshoot.setText("");sshoot.setText("");tshoot.setText("");
        resetradiobutton=new ArrayList<javax.swing.JRadioButton>();
        rules = new Rules01();
        thegame=new Game(this);
        this.curr_player=thegame.returnFirstTeam();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        teamlbl1 = new javax.swing.JLabel();
        teamlbl2 = new javax.swing.JLabel();
        teamscore1 = new javax.swing.JTextField();
        teamscore2 = new javax.swing.JTextField();
        hitsPanel = new javax.swing.JPanel();
        fshoot = new javax.swing.JTextField();
        sshoot = new javax.swing.JTextField();
        tshoot = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tareaNotes = new javax.swing.JTextArea();
        radiox2r2 = new javax.swing.JRadioButton();
        radiox2r1 = new javax.swing.JRadioButton();
        radiox2r3 = new javax.swing.JRadioButton();
        radiox3r1 = new javax.swing.JRadioButton();
        radiox3r2 = new javax.swing.JRadioButton();
        radiox3r3 = new javax.swing.JRadioButton();
        scorebtn = new javax.swing.JButton();
        helpbar = new javax.swing.JLabel();
        resetbtn = new javax.swing.JButton();
        exitbtn = new javax.swing.JButton();
        isTurn2 = new javax.swing.JRadioButton();
        isTurn1 = new javax.swing.JRadioButton();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        menu_newgame = new javax.swing.JMenuItem();
        menu_docs = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 204, 0));
        setForeground(new java.awt.Color(153, 204, 0));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18));
        jLabel1.setText("Score Board");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 0, 0), new java.awt.Color(255, 0, 0), null, null));

        teamlbl1.setText("Player 1:");

        teamlbl2.setText("Player 2:");

        teamscore1.setEditable(false);
        teamscore1.setText("501");
        teamscore1.setAutoscrolls(false);
        teamscore1.setPreferredSize(new java.awt.Dimension(30, 19));

        teamscore2.setEditable(false);
        teamscore2.setText("501");
        teamscore2.setAutoscrolls(false);
        teamscore2.setPreferredSize(new java.awt.Dimension(30, 19));

        hitsPanel.setBackground(new java.awt.Color(102, 102, 255));
        hitsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Round Hits"));
        hitsPanel.setMinimumSize(new java.awt.Dimension(150, 150));

        fshoot.setText("first shoot");
        fshoot.setNextFocusableComponent(sshoot);
        fshoot.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                fshootFocusLost(evt);
            }
        });

        sshoot.setText("second shoot");
        sshoot.setNextFocusableComponent(tshoot);
        sshoot.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                sshootFocusLost(evt);
            }
        });

        tshoot.setText("third shoot");
        tshoot.setNextFocusableComponent(scorebtn);
        tshoot.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tshootFocusLost(evt);
            }
        });

        tareaNotes.setColumns(20);
        tareaNotes.setRows(5);
        jScrollPane1.setViewportView(tareaNotes);

        radiox2r2.setText("x2");
        radiox2r2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiox2r2ActionPerformed(evt);
            }
        });

        radiox2r1.setText("x2");
        radiox2r1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiox2r1ActionPerformed(evt);
            }
        });

        radiox2r3.setText("x2");
        radiox2r3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiox2r3ActionPerformed(evt);
            }
        });

        radiox3r1.setText("x3");
        radiox3r1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiox3r1ActionPerformed(evt);
            }
        });

        radiox3r2.setText("x3");
        radiox3r2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiox3r2ActionPerformed(evt);
            }
        });

        radiox3r3.setText("x3");
        radiox3r3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiox3r3ActionPerformed(evt);
            }
        });

        scorebtn.setLabel("0");
        scorebtn.setNextFocusableComponent(fshoot);
        scorebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scorebtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout hitsPanelLayout = new javax.swing.GroupLayout(hitsPanel);
        hitsPanel.setLayout(hitsPanelLayout);
        hitsPanelLayout.setHorizontalGroup(
            hitsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hitsPanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(hitsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(hitsPanelLayout.createSequentialGroup()
                        .addGroup(hitsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sshoot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fshoot, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tshoot, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(hitsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(hitsPanelLayout.createSequentialGroup()
                                .addComponent(radiox2r1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radiox3r1))
                            .addGroup(hitsPanelLayout.createSequentialGroup()
                                .addComponent(radiox2r2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radiox3r2))
                            .addGroup(hitsPanelLayout.createSequentialGroup()
                                .addComponent(radiox2r3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radiox3r3))))
                    .addComponent(scorebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        hitsPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {fshoot, sshoot, tshoot});

        hitsPanelLayout.setVerticalGroup(
            hitsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hitsPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(hitsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                    .addGroup(hitsPanelLayout.createSequentialGroup()
                        .addGroup(hitsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(hitsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(radiox2r1)
                                .addComponent(radiox3r1))
                            .addComponent(fshoot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(hitsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(hitsPanelLayout.createSequentialGroup()
                                .addComponent(sshoot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)
                                .addGroup(hitsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tshoot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(radiox2r3)
                                    .addComponent(radiox3r3)))
                            .addGroup(hitsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(radiox2r2)
                                .addComponent(radiox3r2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(scorebtn, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)))
                .addContainerGap())
        );

        hitsPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {fshoot, sshoot, tshoot});

        helpbar.setBackground(new java.awt.Color(153, 204, 0));
        helpbar.setForeground(new java.awt.Color(102, 102, 102));
        helpbar.setLabelFor(this);
        helpbar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        helpbar.setFocusable(false);
        helpbar.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        helpbar.setName(""); // NOI18N
        helpbar.setVerifyInputWhenFocusTarget(false);

        resetbtn.setText("Reset");
        resetbtn.setActionCommand("resetbtn");
        resetbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetbtnActionPerformed(evt);
            }
        });

        exitbtn.setText("Finish");
        exitbtn.setActionCommand("exitbtn");
        exitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtnActionPerformed(evt);
            }
        });

        isTurn2.setName("jradio2"); // NOI18N

        isTurn1.setName("jradio1"); // NOI18N

        jMenu3.setText("File");

        menu_newgame.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        menu_newgame.setText("New Game");
        menu_newgame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_newgameActionPerformed(evt);
            }
        });
        jMenu3.add(menu_newgame);

        jMenuBar2.add(jMenu3);

        menu_docs.setText("Help");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Docs");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        menu_docs.add(jMenuItem2);

        jMenuBar2.add(menu_docs);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(teamlbl1)
                    .addComponent(teamlbl2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(teamscore2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(teamscore1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(isTurn1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(isTurn2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(hitsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(30, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(175, Short.MAX_VALUE)
                .addComponent(helpbar, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(resetbtn)
                .addGap(18, 18, 18)
                .addComponent(exitbtn)
                .addGap(24, 24, 24))
            .addGroup(layout.createSequentialGroup()
                .addGap(301, 301, 301)
                .addComponent(jLabel1)
                .addContainerGap(459, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {teamscore1, teamscore2});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(isTurn1)
                                .addGap(52, 52, 52)
                                .addComponent(isTurn2))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(teamlbl1)
                                    .addComponent(teamscore1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(52, 52, 52)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(teamlbl2)
                                    .addComponent(teamscore2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(165, 165, 165))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(hitsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(resetbtn)
                        .addComponent(exitbtn))
                    .addComponent(helpbar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {teamscore1, teamscore2});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    

private void radiox2r1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiox2r1ActionPerformed
    
        if(radiox2r1.isSelected()){
            //TODO check input
            int getvalue=Integer.parseInt(fshoot.getText());
            int value=getvalue*2;
            totalscore=value; 
            String str=String.valueOf(value);
            String score=String.valueOf(totalscore);
            fshoot.setText(str);
            scorebtn.setText(score);
            radiox3r1.setEnabled(false);
            fshoot.setEditable(false);
            resetradiobutton.add(radiox2r1);
        }
        else{
            radiox2r1.setEnabled(false);
            //TODO prompt to change the state
        }
    
}//GEN-LAST:event_radiox2r1ActionPerformed

private void radiox3r1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiox3r1ActionPerformed
    if(radiox3r1.isSelected()){
            //TODO check input
            int getvalue=Integer.parseInt(fshoot.getText());
            int value=getvalue*3;
            totalscore=value;
            String str=String.valueOf(value);
            String score=String.valueOf(totalscore);
            fshoot.setText(str);
            scorebtn.setText(score);
            radiox2r1.setEnabled(false);
            fshoot.setEditable(false);
            resetradiobutton.add(radiox3r1);
        }
        else{
            radiox3r1.setEnabled(false);
            //TODO prompt to change the state
        }
}//GEN-LAST:event_radiox3r1ActionPerformed

private void radiox2r2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiox2r2ActionPerformed
    if(radiox2r2.isSelected()){
        //TODO check input
            int getvalue=Integer.parseInt(sshoot.getText());
            int value=getvalue*2;
            totalscore+=(value-getvalue);
            String str=String.valueOf(value);
            String score=String.valueOf(totalscore);
            sshoot.setText(str);
            scorebtn.setText(score);
            radiox3r2.setEnabled(false);
            sshoot.setEditable(false);
            resetradiobutton.add(radiox2r2);
        }
        else{
            radiox2r2.setEnabled(false);
            //TODO prompt to change the state
        }
}//GEN-LAST:event_radiox2r2ActionPerformed

private void radiox3r2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiox3r2ActionPerformed
    if(radiox3r2.isSelected()){
            //TODO check input
            int getvalue=Integer.parseInt(sshoot.getText());
            int value=getvalue*3;
            totalscore+=(value-getvalue);
            String str=String.valueOf(value);
            String score=String.valueOf(totalscore);
            sshoot.setText(str);
            scorebtn.setText(score);
            radiox2r2.setEnabled(false);
            sshoot.setEditable(false);
            resetradiobutton.add(radiox3r2);
        }
        else{
            radiox3r2.setEnabled(false);
            //TODO prompt to change the state
        }
}//GEN-LAST:event_radiox3r2ActionPerformed

private void radiox2r3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiox2r3ActionPerformed
    if(radiox2r3.isSelected()){
            int getvalue=Integer.parseInt(tshoot.getText());
            int value=getvalue*2;
            totalscore+=(value-getvalue);
            String str=String.valueOf(value);
            String score=String.valueOf(totalscore);
            tshoot.setText(str);
            scorebtn.setText(score);
            radiox3r3.setEnabled(false);
            tshoot.setEditable(false);
            resetradiobutton.add(radiox2r3);
        }
        else{
            radiox2r3.setEnabled(false);
            //TODO prompt to change the state
        }
}//GEN-LAST:event_radiox2r3ActionPerformed

private void radiox3r3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiox3r3ActionPerformed
    if(radiox3r3.isSelected()){
            //TODO check input
            int getvalue=Integer.parseInt(tshoot.getText());
            int value=getvalue*3;
            totalscore+=(value-getvalue);
            String str=String.valueOf(value);
            String score=String.valueOf(totalscore);
            tshoot.setText(str);
            scorebtn.setText(score);
            radiox2r3.setEnabled(false);
            tshoot.setEditable(false);
            resetradiobutton.add(radiox3r3);
        }
        else{
            radiox3r3.setEnabled(false);
            //TODO prompt to change the state
        }
}//GEN-LAST:event_radiox3r3ActionPerformed

private void scorebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scorebtnActionPerformed
// TODO add your handling code here:
    
    if (isTurn1.isSelected()){
        reduceTeamScore1();
        this.curr_player.updateScore(this.returnLbl1());
        
       // this.helpbar.setText(curr_player.displayStatus());
    }
    else 
        if(isTurn2.isSelected()){
        reduceTeamScore2();
        this.curr_player.updateScore(this.returnLbl2());
        //TODO helpbar setText()
    }
    reset();
    reverseTurn(); 
}//GEN-LAST:event_scorebtnActionPerformed

    private void fshootFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fshootFocusLost
        // TODO add your handling code here:
        try{
        String txt =fshoot.getText();
        int tempnum = Integer.parseInt(txt);
            if(rules.isValid(tempnum)){
                totalscore+=tempnum;
                if(curr_player.isWinner(this.curr_player.getScore()-totalscore)){
                                tareaNotes.setText("CHECK DONE:: "+curr_player.getName()+ " score : "+totalscore+" needs "+(this.curr_player.getScore()-totalscore));
                                thegame.finish();
                            }
                    
                tareaNotes.setText(curr_player.getName()+ " score : "+totalscore+" needs "+(this.curr_player.getScore()-totalscore));
                    if(!rules.isBurnedHit(this.curr_player.getScore()-totalscore)){
                        String finalcal = String.valueOf(totalscore);
                        scorebtn.setText(finalcal); 
                    }
                    else{
                        JOptionPane.showMessageDialog(this, " This shoot is busted.\n"
                        + " You gonna lose your turn.\n"
                        + "Next time scar better!!!", "Busted Round", JOptionPane.OK_OPTION);
                        totalscore=0;
                        reset();
                        reverseTurn(); 
                   //??skip scorebtn function
                   //do not store any score
                   //returnPlayer
                   //reset 
                    }
                }
             else{
                JOptionPane.showMessageDialog(this, txt+" is out of legal range.\n"
                        + " Retype the correct.\n"
                        + "Wish a better luck now!!!", "Wrong Input", JOptionPane.OK_OPTION);
                fshoot.setText("");
                }
        }
        catch(NumberFormatException nfe){}
        
    }//GEN-LAST:event_fshootFocusLost

    private void sshootFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sshootFocusLost
        // TODO add your handling code here:

        String txt =sshoot.getText();
        
        int tempnum = Integer.parseInt(txt);
            try {
                if(rules.isValid(tempnum)){
                totalscore+=tempnum;
                if(curr_player.isWinner(this.curr_player.getScore()-totalscore)){
                                tareaNotes.setText("CHECK DONE:: "+curr_player.getName()+ " score : "+totalscore+" needs "+(this.curr_player.getScore()-totalscore));
                                thegame.finish();
                            }
                    
                tareaNotes.setText(curr_player.getName()+ " score : "+totalscore+" needs "+(this.curr_player.getScore()-totalscore));
                    if(!rules.isBurnedHit(this.curr_player.getScore()-totalscore)){
                        String finalcal = String.valueOf(totalscore);
                        scorebtn.setText(finalcal);
                            }
                    else{
                        JOptionPane.showMessageDialog(this, " This shoot is busted.\n"
                            + " You gonna lose your turn.\n"
                            + "Next time scar better!!!", "Busted Round", JOptionPane.OK_OPTION);
                        totalscore=0;
                        reset();
                        reverseTurn(); 
                   //??skip scorebtn function
                  //do not store any score
                   //returnPlayer
                   //reset 
                    }
                }     
                else{
                JOptionPane.showMessageDialog(this, txt+" is out of legal range.\n"
                        + " Retype the correct.\n"
                        + "Wish a better luck now!!!", "Wrong Input", JOptionPane.OK_OPTION );
                //
                sshoot.setText("");
                }
            }
            catch(NumberFormatException nfe){}
        
    }//GEN-LAST:event_sshootFocusLost

    private void tshootFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tshootFocusLost
         // TODO add your handling code here:
        try{
        String txt =tshoot.getText();
        int tempnum = Integer.parseInt(txt);
            if(rules.isValid(tempnum)){
                totalscore+=tempnum;
                
                if(curr_player.isWinner(this.curr_player.getScore()-totalscore)){
                                tareaNotes.setText("CHECK DONE:: "+curr_player.getName()+ " score : "+totalscore+" needs "+(this.curr_player.getScore()-totalscore));
                                thegame.finish();
                            }
                    tareaNotes.setText(curr_player.getName()+ " score : "+totalscore+" needs "+(this.curr_player.getScore()-totalscore));
                    if(!rules.isBurnedHit(this.curr_player.getScore()-totalscore)){
                        String finalcal = String.valueOf(totalscore);
                        scorebtn.setText(finalcal);
                            }
                    else{
                        JOptionPane.showMessageDialog(this, " This shoot is busted.\n"
                            + " You gonna lose your turn.\n"
                            + "Next time scar better!!!", "Busted Round", JOptionPane.OK_OPTION);
                        totalscore=0;
                        reset();
                        reverseTurn(); 
                   //??skip scorebtn function
                   //do not store any score
                   //returnPlayer
                   //reset 
                    }
            }
              else{
                JOptionPane.showMessageDialog(this, txt+" is out of legal range.\n"
                        + " Retype the correct.\n"
                        + "Wish a better luck now!!!", "Wrong Input", JOptionPane.OK_OPTION);
                tshoot.setText("");
                }
        }
        catch(NumberFormatException nfe){}
    }//GEN-LAST:event_tshootFocusLost

    private void resetbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbtnActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_resetbtnActionPerformed

    private void exitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtnActionPerformed
        // TODO need check for incomplete game exit call:
        System.exit(0);
    }//GEN-LAST:event_exitbtnActionPerformed

    private void menu_newgameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_newgameActionPerformed
  
        try {
            Runtime.getRuntime().exec("java -jar dist/Scoard.jar");
        } catch (IOException ex) {}
        System.exit(0); 
    }//GEN-LAST:event_menu_newgameActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

public void reduceTeamScore1(){
    System.out.println("in reduceTeamScore1");
       teamScore1-=Integer.parseInt(scorebtn.getText());
       String parseVal = Integer.toString(teamScore1);
        teamscore1.setText(parseVal);
}

public void reduceTeamScore2(){
  
    System.out.println("in reduceTeamScore2");// delete line
       teamScore2-=totalscore;
       String parseVal = Integer.toString(teamScore2);
        teamscore2.setText(parseVal);
}

private void reset() {
        totalscore=0;
        fshoot.setText("");sshoot.setText("");tshoot.setText("");
        
        for(javax.swing.JRadioButton bt:resetradiobutton){
              bt.doClick();
        }
        
        resetradiobutton.clear();
        fshoot.setEditable(true);sshoot.setEditable(true);tshoot.setEditable(true);
        radiox2r1.setEnabled(true); radiox2r2.setEnabled(true); radiox2r3.setEnabled(true);
        radiox3r1.setEnabled(true);radiox3r2.setEnabled(true);radiox3r3.setEnabled(true);
        scorebtn.setText("0");
    }

private void reset(boolean bool) {
        totalscore=0;
        fshoot.setText("");sshoot.setText("");tshoot.setText("");
        
        for(javax.swing.JRadioButton bt:resetradiobutton){
              bt.doClick();
        }
        
        resetradiobutton.clear();
        fshoot.setEditable(bool);sshoot.setEditable(bool);tshoot.setEditable(bool);
        radiox2r1.setEnabled(bool); radiox2r2.setEnabled(bool); radiox2r3.setEnabled(bool);
        radiox3r1.setEnabled(bool);radiox3r2.setEnabled(bool);radiox3r3.setEnabled(bool);
        scorebtn.setText("0");
    }

public void endGame() {
    JOptionPane.showConfirmDialog(this, curr_player.getName()+", you are the Big WINNER!!\n"
                + "Congrats!!!", "WINNER IS", JOptionPane.INFORMATION_MESSAGE);
        reset(false);
    }

 private void reverseTurn() {
        isTurn1.doClick();
        isTurn2.doClick();
        if(isTurn1.isSelected()){
        reversePlayer(thegame.returnFirstTeam());
        this.helpbar.setText(thegame.checkout(curr_player.getScore()));
        }
        else if(isTurn2.isSelected()){
            reversePlayer(thegame.returnSecondTeam());
        this.helpbar.setText(thegame.checkout(curr_player.getScore()));
        }
        tareaNotes.setText("Now play > "+curr_player.getName()+" "+curr_player.getScore());
    }
 
    private void reversePlayer(ScoardTeam pl) {
        curr_player=pl;
    }
    
    private int teamScore1=501;
    private int teamScore2=501;
    private static int totalscore=0;
    private Game thegame;
    private ArrayList<javax.swing.JRadioButton> resetradiobutton;
    private Rules01 rules;
    protected String msg="";
    private ScoardTeam curr_player;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton exitbtn;
    private javax.swing.JTextField fshoot;
    public static javax.swing.JLabel helpbar;
    private javax.swing.JPanel hitsPanel;
    public javax.swing.JRadioButton isTurn1;
    public javax.swing.JRadioButton isTurn2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu menu_docs;
    private javax.swing.JMenuItem menu_newgame;
    private javax.swing.JRadioButton radiox2r1;
    private javax.swing.JRadioButton radiox2r2;
    private javax.swing.JRadioButton radiox2r3;
    private javax.swing.JRadioButton radiox3r1;
    private javax.swing.JRadioButton radiox3r2;
    private javax.swing.JRadioButton radiox3r3;
    private javax.swing.JButton resetbtn;
    public javax.swing.JButton scorebtn;
    private javax.swing.JTextField sshoot;
    private javax.swing.JTextArea tareaNotes;
    private javax.swing.JLabel teamlbl1;
    private javax.swing.JLabel teamlbl2;
    public javax.swing.JTextField teamscore1;
    public javax.swing.JTextField teamscore2;
    private javax.swing.JTextField tshoot;
    // End of variables declaration//GEN-END:variables

    
}
